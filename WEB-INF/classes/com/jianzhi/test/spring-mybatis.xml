<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
">

	<context:component-scan base-package="com.jianzhi.entity"></context:component-scan>
	<context:component-scan base-package="com.jianzhi.dao"></context:component-scan>
	<context:component-scan base-package="com.jianzhi.service"></context:component-scan>
    


	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/> <property 
		name="url" value="jdbc:mysql://120.26.110.181:3306/jzme"/> <property name="username" 
		value="admin"/> <property name="password" value="admin"/> <property name="url" 
		value="jdbc:mysql://localhost:3306/jzme"/> <property name="username" value="root"/> 
		<property name="password" value="123456"/> </bean> -->
	<!-- 连接池 -->
	<bean
		id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init"
		destroy-method="close">
		<!--日志  -->
		<property name="proxyFilters">
        <list>
            <ref bean="log-filter"/>
        </list>
        </property>
		<property
			name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property
			name="url"
			value="jdbc:mysql://localhost:3306/jzme" />
		<property
			name="username"
			value="root" />
		<property
			name="password"
			value="123456" />
		<!-- 属性类型 通过别名的方式 扩展插件 监控统计 filter:stat 日志filter:log4j 防御sql注入 filter:wall -->
		<property
			name="filters"
			value="stat,log4j" />
		<!-- 最大并接连接数 -->
		<property
			name="maxActive"
			value="20" />
		<!--初始化连接数 -->
		<property
			name="initialSize"
			value="1" />
		<!-- 最大超时等待时间 -->
		<property
			name="maxWait"
			value="60000" />
		<!--最小空闲连接数 -->
		<property
			name="minIdle"
			value="1" />
		<property
			name="timeBetweenEvictionRunsMillis"
			value="60000" />
		<property
			name="minEvictableIdleTimeMillis"
			value="300000" />

		<property
			name="testWhileIdle"
			value="true" />
		<property
			name="testOnBorrow"
			value="false" />
		<property
			name="testOnReturn"
			value="false" />

		<property
			name="poolPreparedStatements"
			value="true" />
		<property
			name="maxOpenPreparedStatements"
			value="20" />

	</bean>
	<!--druid日志配置  -->
	 <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="false" />
       <!--  <property name="statementExecutableSqlLogEnable" value="true" />
      -->
     </bean>



	<!-- myBatis文件 -->
	<!-- mapper.xml -->
	<bean
		id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property
			name="dataSource"
			ref="dataSource" />
		<!-- 自动扫描dao目录, 省掉Configuration.xml里的手工配置 -->

		<property
			name="mapperLocations"
			value="classpath:com/jianzhi/mapper/*.xml" />
	</bean>
	<!--mapper.java -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property
			name="basePackage"
			value="com.jianzhi.dao" />
		<property
			name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>
	<!--gson -->
	<bean
		id="gson"
		class="com.google.gson.Gson"></bean>
   <!--spring  事务管理  -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
   </bean>
   <!--事务注解  -->
   <tx:annotation-driven transaction-manager="transactionManager"
   proxy-target-class="true"/>


</beans>