
window.onload = function() {
	$("#currentCityName").click(function() {// 点击选择城市
		$("#cityselectdiv").toggle();
	});

	// 城市切换按钮
	$(".cityBtn").click(function() {
		$("http://m.tanlu.cc/resource/js/page/.cityCon,.aBg").toggleClass("active");
	});
	// 城市背景
	$(".aBg").click(function() {
		$("http://m.tanlu.cc/resource/js/page/.cityCon,.aBg").removeClass("active");
		$("#cityselectdiv").toggle();
	});

	// 焦点图js
	var mySwiper = new Swiper('.swiper-container', {
		pagination : '.pagination',
		calculateHeight : true,
		autoplay : 3000,
		autoplayDisableOnInteraction : false,
		onTouchEnd : function(swiper) {
			swiper.startAutoplay();// 用户操作后重新轮播
		}
	});

	// 处理首页的动态图，banner
	var banner = $(".bannerhref").click(function() {
		var thisUrl = $(this).attr("url");
		var actiontype = $(this).attr("actiontype");
		if(thisUrl==''){
			return 
		}
		if(actiontype!=0){
			thisUrl=basePath+thisUrl;
		}
		location.href=thisUrl;
	});
	
	 
	$(".swiper-slide").each(function(index ) {
	
		 if(index!=0){
			 $(this).css("display","none");
		 }
		
		
	});;
	
	
	setTimeout("$('.swiper-slide').css('display','')", 1500);
	

};

// 更新：
// 05.27: 1、保证回调执行顺序：error > ready > load；2、回调函数this指向img本身
// 04-02: 1、增加图片完全加载后的回调 2、提高性能

/**
 * 图片头数据加载就绪事件 - 更快获取图片尺寸
 * 
 * @version 2011.05.27
 * @see http://blog.phpdr.net/js-get-image-size.html
 * @param {String}
 *            图片路径
 * @param {Function}
 *            尺寸就绪
 * @param {Function}
 *            加载完毕 (可选)
 * @param {Function}
 *            加载错误 (可选)
 * @example imgReady('logo_cn.png'/*tpa=http://www.google.com.hk/intl/zh-CN/images/logo_cn.png*/,
 *          function () { alert('size ready: width=' + this.width + '; height=' +
 *          this.height); });
 */

/*
 * // 图片的大小，高 = 图片的宽 var swiperWrapper = $("#swiper-wrapper"); var photos =
 * $("#banagerimg"); alert($("#banagerimg").attr("src")); var photoImg =
 * photos.attr("src");
 * 
 * alert(photoImg); imgReady(photoImg, function() { alert('size ready: width=' +
 * this.width + '; height=' + this.height); var photoHeight = this.height; var
 * photoWidth = this.width; var windowsWidth = $(window).width(); var divY =
 * (windowsWidth * photoHeight) / photoWidth; swiperWrapper.css("height", divY);
 * });
 * 
 * 
 * var imgReady = (function() { var list = [], intervalId = null, // 用来执行队列 tick =
 * function() { var i = 0; for (; i < list.length; i++) { list[i].end ?
 * list.splice(i--, 1) : list[i](); } ; !list.length && stop(); }, // 停止所有定时器队列
 * stop = function() { clearInterval(intervalId); intervalId = null; };
 * 
 * return function(url, ready, load, error) { var onready, width, height,
 * newWidth, newHeight, img = new Image();
 * 
 * img.src = url; // 如果图片被缓存，则直接返回缓存数据 if (img.complete) { ready.call(img); load &&
 * load.call(img); return; } ;
 * 
 * width = img.width; height = img.height; // 加载错误后的事件 img.onerror = function() {
 * error && error.call(img); onready.end = true; img = img.onload = img.onerror =
 * null; }; // 图片尺寸就绪 onready = function() { newWidth = img.width; newHeight =
 * img.height; if (newWidth !== width || newHeight !== height || //
 * 如果图片已经在其他地方加载可使用面积检测 newWidth * newHeight > 1024) { ready.call(img);
 * onready.end = true; } ; }; onready(); // 完全加载完毕的事件 img.onload = function() { //
 * onload在定时器时间差范围内可能比onready快 // 这里进行检查并保证onready优先执行 !onready.end &&
 * onready();
 * 
 * load && load.call(img); // IE gif动画会循环执行onload，置空onload即可 img = img.onload =
 * img.onerror = null; }; // 加入队列中定期执行 if (!onready.end) { list.push(onready); //
 * 无论何时只允许出现一个定时器，减少浏览器性能损耗 if (intervalId === null) intervalId =
 * setInterval(tick, 40); } ; }; })();
 */